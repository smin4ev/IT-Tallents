package WarGame;

public class WarGameDemo {

	public static void main(String[] args) {
		Card[] cards = new Card[52];
		Teste teste = new Teste(cards);
		teste.fillTeste();
		teste.shuffleTeste();

		// System.out.println(cards[i].powerOfCardWithValue(cards[i]));

		Card[] firstPlayerCards = teste.makeHalfTeste(0, 26);
		Card[] secondPlayerCards = teste.makeHalfTeste(26, 52);
		Player ivan = new Player("Ivan", firstPlayerCards);
		Player spas = new Player("Spas", secondPlayerCards);

		int ivanCounter = 0;
		int spasCounter = 0;
		int currentSum = 0;
		int temp = 0;
		boolean isEnd = false;
		int counter = 1;
		for (int i = 0; i < secondPlayerCards.length; i++) {
			while (firstPlayerCards[i].powerOfCardWithValue(firstPlayerCards[i]) == secondPlayerCards[i]
					.powerOfCardWithValue(secondPlayerCards[i])) {
				System.out.println(firstPlayerCards[i].getCardPower() +" "+secondPlayerCards[i].getCardPower());
				currentSum = currentSum + 6;
				System.out.println("Current sum is " + currentSum);
				i = i + 3;
				if (i >= secondPlayerCards.length) {
					i = i - 3;
					temp = (secondPlayerCards.length - 1) - i;
					System.out.println("Temp " + temp);
					currentSum = (currentSum - 6) + (2 * temp);
					System.out.println("First last card " + firstPlayerCards[i].getCardPower());
					System.out.println("Second last card " + secondPlayerCards[i].getCardPower());
					if (firstPlayerCards[25].powerOfCardWithValue(firstPlayerCards[25]) > secondPlayerCards[25]
							.powerOfCardWithValue(secondPlayerCards[25])) {
						ivanCounter = ivanCounter + currentSum;
						System.out.println("Ivan counter " + ivanCounter);
					}
					if (firstPlayerCards[25].powerOfCardWithValue(firstPlayerCards[25]) < secondPlayerCards[25]
							.powerOfCardWithValue(secondPlayerCards[25])) {
						spasCounter = spasCounter + currentSum;
						System.out.println("Spas counter" + spasCounter);
					}
					if (firstPlayerCards[25].powerOfCardWithValue(firstPlayerCards[25]) == secondPlayerCards[25]
							.powerOfCardWithValue(secondPlayerCards[25])) {
						ivanCounter = ivanCounter + currentSum / 2;
						spasCounter = spasCounter + currentSum / 2;
					}
					isEnd = true;
				}
			}
			if(isEnd == true){
				break;
			}
			
			if (firstPlayerCards[i].powerOfCardWithValue(firstPlayerCards[i]) > 
				secondPlayerCards[i].powerOfCardWithValue(secondPlayerCards[i])) {
				ivanCounter = ivanCounter + 2 + currentSum;
			}
			if (firstPlayerCards[i].powerOfCardWithValue(firstPlayerCards[i]) < 
			secondPlayerCards[i].powerOfCardWithValue(secondPlayerCards[i])) {
			spasCounter = spasCounter + 2 + currentSum;
		}
		
			currentSum = 0;
		}

		if(ivanCounter > spasCounter){
			System.out.println("Ivan is winner " + ivanCounter);
		}
		if(ivanCounter < spasCounter){
			System.out.println("Spas is winner " + spasCounter);
		}
		if(ivanCounter == spasCounter){
			System.out.println("It is a drow " + ivanCounter );
		}
	}

}
